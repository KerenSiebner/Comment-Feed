{"ast":null,"code":"import io from 'socket.io-client';\nimport { userService } from './user.service';\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg';\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg';\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic';\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\nconst SOCKET_EMIT_LOGIN = 'set-user-socket';\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket';\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030';\n// export const socketService = createSocketService()\nexport const socketService = createDummySocketService();\n\n// for debugging from console\nwindow.socketService = socketService;\nsocketService.setup();\nfunction createSocketService() {\n  var socket = null;\n  const socketService = {\n    setup() {\n      socket = io(baseUrl);\n    },\n    on(eventName, cb) {\n      socket.on(eventName, cb);\n    },\n    off(eventName) {\n      let cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!socket) return;\n      if (!cb) socket.removeAllListeners(eventName);else socket.off(eventName, cb);\n    },\n    emit(eventName, data) {\n      socket.emit(eventName, data);\n    },\n    login(userId) {\n      socket.emit(SOCKET_EMIT_LOGIN, userId);\n    },\n    logout() {\n      socket.emit(SOCKET_EMIT_LOGOUT);\n    },\n    terminate() {\n      socket = null;\n    }\n  };\n  return socketService;\n}\n\n// eslint-disable-next-line\nfunction createDummySocketService() {\n  var listenersMap = {};\n  const socketService = {\n    listenersMap,\n    setup() {\n      listenersMap = {};\n    },\n    terminate() {\n      this.setup();\n    },\n    login() {},\n    logout() {},\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName] || []), cb];\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return;\n      if (!cb) delete listenersMap[eventName];else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb);\n    },\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return;\n      listenersMap[eventName].forEach(listener => {\n        listener(data);\n      });\n    },\n    // Functions for easy testing of pushed data\n    testChatMsg() {\n      this.emit(SOCKET_EVENT_ADD_MSG, {\n        from: 'Someone',\n        txt: 'Aha it worked!'\n      });\n    },\n    testUserUpdate() {\n      this.emit(SOCKET_EVENT_USER_UPDATED, {\n        ...userService.getLoggedinUser(),\n        score: 555\n      });\n    }\n  };\n  window.listenersMap = listenersMap;\n  return socketService;\n}\n\n// Basic Tests\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('mama', cb)\n// socketService.emit('baba', 'Puk')\n// socketService.off('baba', cb)","map":{"version":3,"names":["io","userService","SOCKET_EVENT_ADD_MSG","SOCKET_EMIT_SEND_MSG","SOCKET_EMIT_SET_TOPIC","SOCKET_EMIT_USER_WATCH","SOCKET_EVENT_USER_UPDATED","SOCKET_EVENT_REVIEW_ADDED","SOCKET_EVENT_REVIEW_ABOUT_YOU","SOCKET_EMIT_LOGIN","SOCKET_EMIT_LOGOUT","baseUrl","process","env","NODE_ENV","socketService","createDummySocketService","window","setup","createSocketService","socket","on","eventName","cb","off","removeAllListeners","emit","data","login","userId","logout","terminate","listenersMap","filter","l","forEach","listener","testChatMsg","from","txt","testUserUpdate","getLoggedinUser","score"],"sources":["/Users/kerenzilberman/Library/Mobile Documents/com~apple~CloudDocs/dev/Keren Siebner Zilberman/Day 103- Prep Job Interview/Comments Feed/frontend/src/services/socket.service.js"],"sourcesContent":["import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\nwindow.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    login(userId) {\r\n      socket.emit(SOCKET_EMIT_LOGIN, userId)\r\n    },\r\n    logout() {\r\n      socket.emit(SOCKET_EMIT_LOGOUT)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    },\r\n\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    login() {   \r\n    },\r\n    logout() {   \r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    // Functions for easy testing of pushed data\r\n    testChatMsg() {\r\n      this.emit(SOCKET_EVENT_ADD_MSG, { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n    testUserUpdate() {\r\n      this.emit(SOCKET_EVENT_USER_UPDATED, {...userService.getLoggedinUser(), score: 555})\r\n    }\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}