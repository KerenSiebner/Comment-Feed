{"ast":null,"code":"var _jsxFileName = \"/Users/kerenzilberman/Library/Mobile Documents/com~apple~CloudDocs/dev/Keren Siebner Zilberman/Day 103- Prep Job Interview/Comments Feed/frontend/src/pages/comment-feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport md5 from 'md5-hash';\nimport { socketService, SOCKET_EMIT_SEND_MSG, SOCKET_EVENT_ADD_MSG, SOCKET_EMIT_SET_TOPIC } from '../services/socket.service';\nimport { getActionAddMsg, addMsg } from '../store/msg.actions';\nimport { store } from '../store/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CommentFeed() {\n  _s();\n  const msgs = useSelector(storeState => storeState.msgModule.msgs);\n  const [msg, setMsg] = useState({\n    txt: '',\n    email: ''\n  });\n  // const [msgs, setMsgs] = useState([])\n  const [filteredMsgs, setFilteredMsgs] = useState([]);\n  const [searchedTxt, setSearchedTxt] = useState('');\n\n  // const dispatch = useDispatch()\n\n  // useEffect(()=>{\n  //   setFilteredMsgs(msgs)\n  // },[])\n\n  // useEffect(() => {\n  //   socketService.on(SOCKET_EVENT_ADD_MSG, addMsg)\n  //   return () => {\n  //     socketService.off(SOCKET_EVENT_ADD_MSG, addMsg)\n  //   }\n  // }, [msgs])\n\n  // function addMsg(newMsg) {\n  //   dispatch(getActionAddMsg(newMsg))\n  //   setFilteredMsgs(prevMsgs => [...prevMsgs, newMsg])\n  // }\n\n  async function sendMsg(ev) {\n    ev.preventDefault();\n    const newMsg = {\n      email: msg.email,\n      txt: msg.txt\n    };\n    // socketService.emit(SOCKET_EMIT_SEND_MSG, newMsg)\n    // for now - we add the msg ourself\n    try {\n      await addMsg(newMsg);\n      setFilteredMsgs(prevMsgs => [...prevMsgs, newMsg]);\n      // setFilteredMsgs(msgs)\n      setMsg({\n        txt: '',\n        email: ''\n      });\n    } catch (err) {\n      console.log('Failed to send message', err);\n    }\n  }\n  function handleFormChange(ev) {\n    const {\n      name,\n      value\n    } = ev.target;\n    setMsg(prevMsg => ({\n      ...prevMsg,\n      [name]: value\n    }));\n  }\n  function setFilterBy(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      value\n    } = target;\n    setSearchedTxt(value);\n    if (!value) setFilteredMsgs(msgs);\n    const regex = new RegExp(value, 'i');\n    const filteredMsgs = msgs === null || msgs === void 0 ? void 0 : msgs.filter(msg => regex.test(msg.txt));\n    console.log('filteredMsgs', filteredMsgs);\n    setFilteredMsgs(filteredMsgs);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMsg,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: msg.email,\n        placeholder: \"Email\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: msg.txt,\n        onChange: handleFormChange,\n        name: \"txt\",\n        autoComplete: \"off\",\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchedTxt,\n      placeholder: \"Filter\",\n      onChange: setFilterBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMsgs.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://www.gravatar.com/avatar/${md5(msg.email.toLowerCase())}?s=10`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), msg.email, \": \", msg.txt]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentFeed, \"xNuowDIix9IpDqhzptmAeYwH/t4=\", false, function () {\n  return [useSelector];\n});\n_c = CommentFeed;\nvar _c;\n$RefreshReg$(_c, \"CommentFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","useSelector","md5","socketService","SOCKET_EMIT_SEND_MSG","SOCKET_EVENT_ADD_MSG","SOCKET_EMIT_SET_TOPIC","getActionAddMsg","addMsg","store","CommentFeed","msgs","storeState","msgModule","msg","setMsg","txt","email","filteredMsgs","setFilteredMsgs","searchedTxt","setSearchedTxt","sendMsg","ev","preventDefault","newMsg","prevMsgs","err","console","log","handleFormChange","name","value","target","prevMsg","setFilterBy","regex","RegExp","filter","test","map","idx","toLowerCase"],"sources":["/Users/kerenzilberman/Library/Mobile Documents/com~apple~CloudDocs/dev/Keren Siebner Zilberman/Day 103- Prep Job Interview/Comments Feed/frontend/src/pages/comment-feed.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport md5 from 'md5-hash'\r\n\r\nimport { socketService, SOCKET_EMIT_SEND_MSG, SOCKET_EVENT_ADD_MSG, SOCKET_EMIT_SET_TOPIC } from '../services/socket.service'\r\nimport { getActionAddMsg, addMsg } from '../store/msg.actions'\r\nimport { store } from '../store/store'\r\n\r\nexport function CommentFeed() {\r\n  const msgs = useSelector(storeState => storeState.msgModule.msgs)\r\n  const [msg, setMsg] = useState({ txt: '', email: '' })\r\n  // const [msgs, setMsgs] = useState([])\r\n  const [filteredMsgs, setFilteredMsgs] = useState([])\r\n  const [searchedTxt, setSearchedTxt] = useState('')\r\n\r\n\r\n  // const dispatch = useDispatch()\r\n\r\n  // useEffect(()=>{\r\n  //   setFilteredMsgs(msgs)\r\n  // },[])\r\n\r\n  // useEffect(() => {\r\n  //   socketService.on(SOCKET_EVENT_ADD_MSG, addMsg)\r\n  //   return () => {\r\n  //     socketService.off(SOCKET_EVENT_ADD_MSG, addMsg)\r\n  //   }\r\n  // }, [msgs])\r\n\r\n  // function addMsg(newMsg) {\r\n  //   dispatch(getActionAddMsg(newMsg))\r\n  //   setFilteredMsgs(prevMsgs => [...prevMsgs, newMsg])\r\n  // }\r\n\r\n  async function sendMsg(ev) {\r\n    ev.preventDefault()\r\n    const newMsg = { email: msg.email, txt: msg.txt }\r\n    // socketService.emit(SOCKET_EMIT_SEND_MSG, newMsg)\r\n    // for now - we add the msg ourself\r\n    try {\r\n      await addMsg(newMsg)\r\n      setFilteredMsgs(prevMsgs => [...prevMsgs, newMsg])\r\n      // setFilteredMsgs(msgs)\r\n      setMsg({ txt: '', email: '' })\r\n    } catch (err) {\r\n      console.log('Failed to send message', err)\r\n    }\r\n  }\r\n\r\n  function handleFormChange(ev) {\r\n    const { name, value } = ev.target\r\n    setMsg(prevMsg => ({ ...prevMsg, [name]: value }))\r\n  }\r\n\r\n  function setFilterBy({ target }) {\r\n    const { value } = target\r\n    setSearchedTxt(value)\r\n    if (!value) setFilteredMsgs(msgs)\r\n    const regex = new RegExp(value, 'i')\r\n    const filteredMsgs = msgs?.filter(msg => regex.test(msg.txt))\r\n    console.log('filteredMsgs', filteredMsgs)\r\n    setFilteredMsgs(filteredMsgs)\r\n  }\r\n\r\n  return (\r\n    <section className=\"chat-app\">\r\n      <form onSubmit={sendMsg}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={msg.email}\r\n          placeholder=\"Email\"\r\n          onChange={handleFormChange} />\r\n        <input\r\n          type=\"text\"\r\n          value={msg.txt}\r\n          onChange={handleFormChange}\r\n          name=\"txt\"\r\n          autoComplete=\"off\"\r\n          placeholder='Message' />\r\n        <button>SUBMIT</button>\r\n      </form>\r\n      <input type=\"text\" value={searchedTxt} placeholder='Filter' onChange={setFilterBy} />\r\n      <ul>\r\n        {filteredMsgs.map((msg, idx) => (\r\n          <li key={idx}>\r\n            <img src={`https://www.gravatar.com/avatar/${md5((msg.email).toLowerCase())}?s=10`}/>\r\n            {/* <img src={`https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50`} style={{ width: '30px' }} /> */}\r\n            {msg.email}: {msg.txt}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}