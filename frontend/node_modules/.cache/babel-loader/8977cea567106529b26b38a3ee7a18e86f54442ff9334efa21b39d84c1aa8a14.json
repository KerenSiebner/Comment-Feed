{"ast":null,"code":"import { reviewService } from '../services/msg.service';\nimport { store } from './store.js';\nimport { ADD_REVIEW, REMOVE_REVIEW, SET_REVIEWS } from './review.reducer';\nimport { SET_SCORE, SET_WATCHED_USER } from './user.reducer';\n\n// Action Creators\n\nexport function getActionAddMsg(msg) {\n  return {\n    type: ADD_MSG,\n    msg\n  };\n}\nexport function getActionSetWatchedUser(user) {\n  return {\n    type: SET_WATCHED_USER,\n    user\n  };\n}\nexport async function loadReviews() {\n  try {\n    const reviews = await reviewService.query();\n    store.dispatch({\n      type: SET_REVIEWS,\n      reviews\n    });\n  } catch (err) {\n    console.log('ReviewActions: err in loadReviews', err);\n    throw err;\n  }\n}\nexport async function addMsg(msg) {\n  try {\n    const addedMsg = await msgService.add(msg);\n    store.dispatch(getActionAddMsg(addedMsg));\n  } catch (err) {\n    console.log('ReviewActions: err in addReview', err);\n    throw err;\n  }\n}","map":{"version":3,"names":["reviewService","store","ADD_REVIEW","REMOVE_REVIEW","SET_REVIEWS","SET_SCORE","SET_WATCHED_USER","getActionAddMsg","msg","type","ADD_MSG","getActionSetWatchedUser","user","loadReviews","reviews","query","dispatch","err","console","log","addMsg","addedMsg","msgService","add"],"sources":["/Users/kerenzilberman/Library/Mobile Documents/com~apple~CloudDocs/dev/Keren Siebner Zilberman/Day 103- Prep Job Interview/Comments Feed/frontend/src/store/msg.actions.js"],"sourcesContent":["import { reviewService } from '../services/msg.service'\r\nimport { store } from './store.js'\r\nimport { ADD_REVIEW, REMOVE_REVIEW, SET_REVIEWS } from './review.reducer'\r\nimport { SET_SCORE, SET_WATCHED_USER } from './user.reducer'\r\n\r\n// Action Creators\r\n\r\nexport function getActionAddMsg(msg) {\r\n  return { type: ADD_MSG, msg }\r\n}\r\nexport function getActionSetWatchedUser(user) {\r\n  return { type: SET_WATCHED_USER, user }\r\n}\r\n\r\nexport async function loadReviews() {\r\n  try {\r\n    const reviews = await reviewService.query()\r\n    store.dispatch({ type: SET_REVIEWS, reviews })\r\n\r\n  } catch (err) {\r\n    console.log('ReviewActions: err in loadReviews', err)\r\n    throw err\r\n  }\r\n}\r\n\r\nexport async function addMsg(msg) {\r\n  try {\r\n    const addedMsg = await msgService.add(msg)\r\n    store.dispatch(getActionAddMsg(addedMsg))\r\n\r\n  } catch (err) {\r\n    console.log('ReviewActions: err in addReview', err)\r\n    throw err\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,EAAEC,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AACzE,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,gBAAgB;;AAE5D;;AAEA,OAAO,SAASC,eAAe,CAACC,GAAG,EAAE;EACnC,OAAO;IAAEC,IAAI,EAAEC,OAAO;IAAEF;EAAI,CAAC;AAC/B;AACA,OAAO,SAASG,uBAAuB,CAACC,IAAI,EAAE;EAC5C,OAAO;IAAEH,IAAI,EAAEH,gBAAgB;IAAEM;EAAK,CAAC;AACzC;AAEA,OAAO,eAAeC,WAAW,GAAG;EAClC,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMd,aAAa,CAACe,KAAK,EAAE;IAC3Cd,KAAK,CAACe,QAAQ,CAAC;MAAEP,IAAI,EAAEL,WAAW;MAAEU;IAAQ,CAAC,CAAC;EAEhD,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,GAAG,CAAC;IACrD,MAAMA,GAAG;EACX;AACF;AAEA,OAAO,eAAeG,MAAM,CAACZ,GAAG,EAAE;EAChC,IAAI;IACF,MAAMa,QAAQ,GAAG,MAAMC,UAAU,CAACC,GAAG,CAACf,GAAG,CAAC;IAC1CP,KAAK,CAACe,QAAQ,CAACT,eAAe,CAACc,QAAQ,CAAC,CAAC;EAE3C,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,GAAG,CAAC;IACnD,MAAMA,GAAG;EACX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}